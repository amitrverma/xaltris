name: Build and deploy Next.js app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the Next.js app
        run: npm run build

      - name: Verify standalone build
        run: |
          echo "=== Checking build output ==="
          ls -la .next/
          echo ""
          echo "=== Checking standalone directory ==="
          if [ -d ".next/standalone" ]; then
            echo "✅ Standalone build created successfully"
            ls -la .next/standalone/
            echo ""
            echo "Standalone structure:"
            find .next/standalone -name "*.js" -o -name "*.json" | head -10
          else
            echo "❌ Standalone build not found!"
            exit 1
          fi

      - name: Prepare deployment package
        run: |
          echo "Creating deployment package..."
          mkdir -p deployment
          
          # Verify standalone build exists
          if [ ! -d ".next/standalone" ]; then
            echo "❌ Standalone build not found!"
            echo "Contents of .next directory:"
            ls -la .next/
            exit 1
          fi
          
          echo "✅ Standalone build found"
          
          # Copy ALL files from standalone (including the generated server.js)
          cp -r .next/standalone/* deployment/
          cp -r .next/standalone/.* deployment/ 2>/dev/null || true
          
          # Ensure .next directory exists in deployment
          if [ ! -d "deployment/.next" ]; then
            echo "⚠️  Creating .next directory and copying build artifacts..."
            mkdir -p deployment/.next
            
            # Copy essential build files
            if [ -d ".next/static" ]; then
              cp -r .next/static deployment/.next/
            fi
            
            # Copy build manifests and other essential files
            cp .next/*.json deployment/.next/ 2>/dev/null || true
            cp -r .next/server deployment/.next/ 2>/dev/null || true
            cp -r .next/cache deployment/.next/ 2>/dev/null || true
          fi
          
          # Copy public directory to deployment root
          if [ -d "public" ]; then
            cp -r public deployment/
          fi
          
          # Copy static assets to public/_next/static for proper serving
          if [ -d ".next/static" ]; then
            mkdir -p deployment/public/_next
            cp -r .next/static deployment/public/_next/
          fi
          
          echo "=== Final deployment structure ==="
          echo "Root files:"
          ls -la deployment/
          echo ""
          echo "Generated server.js content preview:"
          head -10 deployment/server.js 2>/dev/null || echo "❌ No server.js found"
          echo ""
          echo ".next directory:"
          ls -la deployment/.next/ 2>/dev/null || echo "❌ No .next directory"
          echo ""
          echo "Package.json start script:"
          grep -A 3 -B 1 '"start"' deployment/package.json 2>/dev/null || echo "❌ No package.json or start script found"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: deployment

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-app
          path: .

      - name: Verify deployment package
        run: |
          echo "=== Deployment package verification ==="
          ls -la
          echo ""
          echo "Package.json contents:"
          cat package.json | grep -A 5 -B 5 "scripts" || echo "No scripts section found"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'xaltrisWA'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .